name: CI (WP Core)

on:
  push:
    branches-ignore:
      - develop
      - staging
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: "true"

jobs:
  wp-core:
    name: "Run WP Core Tests"
    runs-on: ubuntu-latest
    steps:
      - name: Get the latest WP version
        id: version
        run: |
          echo "::set-output name=latest::$(curl -s https://api.wordpress.org/core/version-check/1.7/ | jq -r '.offers | map(select( .response == "upgrade")) | .[0].version')"

      - name: Configure environment variables
        run: |
          echo "PHP_FPM_UID=$(id -u)" >> "${GITHUB_ENV}"
          echo "PHP_FPM_GID=$(id -g)" >> "${GITHUB_ENV}"

      - name: Check out WordPress
        uses: actions/checkout@v3
        with:
          repository: wordpress/wordpress-develop
          path: wordpress
          ref: ${{ steps.version.outputs.latest }}

      - name: Check out source code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          path: wordpress/src/wp-content/mu-plugins

      - name: Disable Jetpack
        run: |
          echo "define( 'VIP_JETPACK_SKIP_LOAD', 'true' );" >> "wordpress/src/wp-content/mu-plugins/000-vip-init.php"

      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version-file: 'wordpress/.nvmrc'
          cache: npm
          cache-dependency-path: 'wordpress/package-lock.json'

      - name: Install Dependencies
        run: npm ci
        working-directory: wordpress

      - name: Install Composer dependencies
        run: docker-compose run --rm php composer update
        working-directory: wordpress

      - name: Start Docker environment
        run: npm run env:start
        working-directory: wordpress

      - name: Install WordPress
        run: npm run env:install
        working-directory: wordpress

      - name: Run PHPUnit tests
        run: node ./tools/local-env/scripts/docker.js run php ./vendor/bin/phpunit --verbose -c phpunit.xml.dist
        working-directory: wordpress

      - name: Run AJAX tests
        run: node ./tools/local-env/scripts/docker.js run php ./vendor/bin/phpunit --verbose -c phpunit.xml.dist --group ajax
        working-directory: wordpress

      - name: Run ms-files tests as a multisite install
        run: node ./tools/local-env/scripts/docker.js run php ./vendor/bin/phpunit --verbose -c tests/phpunit/multisite.xml --group ms-files
        working-directory: wordpress

      - name: Run external HTTP tests
        run: node ./tools/local-env/scripts/docker.js run php ./vendor/bin/phpunit --verbose -c phpunit.xml.dist --group external-http
        working-directory: wordpress
